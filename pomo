#!/usr/bin/env bash

set -Eeuo pipefail

LOG=~/pomodoro.log
PIDFILE=$XDG_RUNTIME_DIR/pomodoro.pid
STATUSFILE=$XDG_RUNTIME_DIR/pomodoro.status

. ~/.bash/timeclock.bash
LOCK () {
    xset s activate
    to
}

pomodoro_running () {
    if [ -f $PIDFILE ]; then
        cat $PIDFILE | xargs ps >/dev/null 2>&1
    else
        false
    fi
}

runtime () {
    ps ho etime $(cat $PIDFILE) | awk '{print $1}'
}
quotes=(
    "Come and see the violence inherent in the system!"
    "Help! Help! I'm being repressed!"
    "Found them? In Mercia?! The coconut's tropical!"
    "It's not a question of where he grips it! It's a simple question of weight ratios!"
    "No you're not, you'll be stone dead in a moment."
    "Supreme executive power derives from a mandate from the masses, not from some farcical aquatic ceremony!"
    "You can't expect to wield supreme power just 'cause some watery tart threw a sword at you!"
    "Oh, she turned me into a newt!"
    "No, now go away or I shall taunt you a second time!"
    "Ni!"
    "How does it... um... how does it work?"
    "What are you going to do, bleed on me?"
)

title=
mins=25
action=

if [ $# -gt 0 ]; then
    if [ "$1" = "kill" ]; then
        action=kill
        shift
    elif [ "$1" = "status" ]; then
        action=status
        shift
    elif (echo $1 | grep -q --perl-regexp '^\d+$'); then
        mins=$1
        shift
    fi
fi
title="$@"
if [ -z "$title" ]; then
    title="[unspecified]"
fi
if [ -z "$action" ]; then
    if pomodoro_running; then
        action="status"
    else
        action="start"
    fi
fi

# Debug
#for i in title mins action; do
#    echo "$i: ${!i}"
#done
show_status () {
    tail -n 1 $LOG
    echo "Runtime: $(runtime)"
    echo
    echo ${quotes[$RANDOM % ${#quotes[@]} ]}
}

case "$action" in
    status)
        if pomodoro_running; then
            show_status
        else
            echo "Forsooth, hearken unto the lack of a pomodoro!"
            exit 1
        fi
        ;;
    start)
        if pomodoro_running; then
            show_status
            exit 1
        else
            echo "Beginning pomodoro: $title"

            (
            echo -n "$(date +'%Y-%m-%d %_H:%M'): "
            echo "$title ($mins)"
            ) >> $LOG
            (
            echo $BASHPID > $PIDFILE
            trap "rm -f $PIDFILE $STATUSFILE" EXIT
            for i in $(seq ${mins} | tac); do
                echo "(pomo: $i)" > $STATUSFILE
                sleep 1m
            done
            LOCK
            )&
        fi
        ;;
    kill)
        if pomodoro_running; then
            death="KILLED after $(runtime)"
            kill $(cat $PIDFILE)
            ex -s $LOG '+$' "+s/\$/ $death/" +x || true
            #                                   ^^^^^^^
            # ex -s always returns 1, far as I can tell
            tail -n 1 $LOG
        else
            >&2 echo "Come and see the violence inherent in the system!"
            exit 2
        fi
        ;;
esac
